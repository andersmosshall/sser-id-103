<?php

namespace Drupal\simple_school_reports_user_import_random\Form;

use Drupal\Core\Form\FormStateInterface;
use Drupal\simple_school_reports_user_import_support\Form\ImportUsersFormBase;

class ImportRandomUsersForm extends ImportUsersFormBase {

  protected array $generatedPnums = [];

  public function getFormId() {
    return 'ssr_import_random_users_form';
  }

  protected function buildIntiFormStep(array $form, FormStateInterface $form_state): array {
    $grades = simple_school_reports_core_allowed_user_grade();
    unset($grades[-99]);
    unset($grades[99]);

    foreach ($grades as $grade => $grade_name) {
      $form['grade_' . $grade] = [
        '#type' => 'number',
        '#title' => $this->t('Number of students to generate for grade %grade', ['%grade' => $grade_name]),
        '#description' => $this->t('Caregivers and mentor will be generated for each student.'),
        '#default_value' => 10,
        '#min' => 0,
        '#max' => 30,
        '#required' => TRUE,
      ];
    }

    $form['extra_teachers'] = [
      '#type' => 'number',
      '#title' => $this->t('Teachers to generate'),
      '#default_value' => 10,
      '#min' => 0,
      '#max' => 30,
      '#required' => TRUE,
    ];

    return $form;
  }

  protected function addRandomUser(
    int $age,
    string $role,
    ?string $gender = NULL,
    ?int $grade = NULL,
    ?string $last_name = NULL,
    ?array $address = [],
    ?array $caregivers = [],
    string $mentor = NULL
  ): string {

    if (!$gender) {
      $gender = mt_rand(0, 1) ? 'male' : 'female';
    }

    $first_name = $this->getRandomFirstName($gender);
    $last_name = $last_name ?? $this->getRandomLastName();

    $email = strtolower($first_name . '.' . $last_name . mt_rand(1, 10) . '@example.com');

    $birth_year = (new \DateTime())->format('Y') - $age;
    $random_month = mt_rand(1, 12);
    $random_day = mt_rand(1, 28);
    $birth_date = $birth_year . str_pad($random_month, 2, '0', STR_PAD_LEFT) . str_pad($random_day, 2, '0', STR_PAD_LEFT);

    for ($tf_index = 0; $tf_index <= 9; $tf_index++) {
      $ssn = $birth_date . 'TF' . ($gender === 'male' ? '1' : '2') . $tf_index;
      if (!isset($this->generatedPnums[$ssn])) {
        $this->generatedPnums[$ssn] = TRUE;
        break;
      }
    }

    $street_suffixes = ['gränd', 'gatan', 'väg'];
    $address = $address ?: [
      'field_street_address' => self::getRandomFirstName('male') . $street_suffixes[mt_rand(0, count($street_suffixes) - 1)] . ' ' . mt_rand(1,40),
      'field_zip_code' => mt_rand(12345, 99999),
      'field_city' => 'Demostad',
    ];

    return $this->addUserToImport(
      $email,
      $ssn,
      $first_name,
      $last_name,
      [$role],
      $gender,
      $grade,
      $address,
      $mentor,
      $caregivers,
    ) ?? $this->uuid->generate();
  }

  protected function resolveUsersToImport(FormStateInterface $form_state): void {
    $grades = simple_school_reports_core_allowed_user_grade();
    unset($grades[-99]);
    unset($grades[99]);

    foreach ($grades as $grade => $grade_name) {
      $number_of_students = abs($form_state->getValue('grade_' . $grade, 0));
      if ($number_of_students === 0) {
        continue;
      }

      $grade_mentor = $this->addRandomUser(mt_rand(30, 64),'teacher');

      $is_authm = (new \DateTime())->format('n') > 7;
      $grade_age = $is_authm ? 6 + $grade : 7 + $grade;

      for ($i = 0; $i < $number_of_students; $i++) {
        $caregiver_1 = $this->addRandomUser(mt_rand(30, 64), 'caregiver', 'male');
        $last_name = $this->usersToImport[$caregiver_1]['field_last_name'];
        $address = $this->usersToImport[$caregiver_1]['field_address'];
        $caregiver_2 = $this->addRandomUser(mt_rand(30, 64), 'caregiver', 'female', NULL, $last_name, $address);
        $this->addRandomUser($grade_age, 'student', NULL, $grade, $last_name, $address, [$caregiver_1, $caregiver_2], $grade_mentor);
      }
    }

    $number_of_extra_teachers = abs($form_state->getValue('extra_teachers', 0));
    for ($i = 0; $i < $number_of_extra_teachers; $i++) {
      $this->addRandomUser(mt_rand(30, 64), 'teacher');
    }
  }

  protected function getRandomLastName() {
    $source = [
      'Andersson',
      'Johansson',
      'Karlsson',
      'Nilsson',
      'Eriksson',
      'Larsson',
      'Olsson',
      'Persson',
      'Svensson',
      'Gustafsson',
      'Pettersson',
      'Jonsson',
      'Jansson',
      'Hansson',
      'Bengtsson',
      'Jönsson',
      'Lindberg',
      'Jakobsson',
      'Magnusson',
      'Olofsson',
      'Lindström',
      'Lindqvist',
      'Lindgren',
      'Berg',
      'Axelsson',
      'Bergström',
      'Lundberg',
      'Lind',
      'Lundgren',
      'Lundqvist',
      'Mattsson',
      'Berglund',
      'Fredriksson',
      'Sandberg',
      'Henriksson',
      'Forsberg',
      'Sjöberg',
      'Ali',
      'Wallin',
      'Mohamed',
      'Engström',
      'Eklund',
      'Danielsson',
      'Lundin',
      'Håkansson',
      'Björk',
      'Bergman',
      'Gunnarsson',
      'Holm',
      'Wikström',
      'Samuelsson',
      'Isaksson',
      'Fransson',
      'Bergqvist',
      'Nyström',
      'Holmberg',
      'Arvidsson',
      'Löfgren',
      'Söderberg',
      'Nyberg',
      'Blomqvist',
      'Claesson',
      'Nordström',
      'Ahmed',
      'Mårtensson',
      'Lundström',
      'Hassan',
      'Viklund',
      'Björklund',
      'Eliasson',
      'Pålsson',
      'Berggren',
      'Sandström',
      'Lund',
      'Nordin',
      'Ström',
      'Åberg',
      'Falk',
      'Ekström',
      'Hermansson',
      'Holmgren',
      'Hellström',
      'Dahlberg',
      'Hedlund',
      'Sundberg',
      'Sjögren',
      'Ek',
      'Blom',
      'Abrahamsson',
      'Martinsson',
      'Öberg',
      'Andreasson',
      'Strömberg',
      'Månsson',
      'Hansen',
      'Åkesson',
      'Dahl',
      'Lindholm',
      'Norberg',
      'Holmqvist',
    ];

    return $source[mt_rand(0, count($source) - 1)];
  }

  protected function getRandomFirstName(string $gender) {
    $source = [
      'male' => [
        'Lars',
        'Anders',
        'Johan',
        'Peter',
        'Jan',
        'Daniel',
        'Mikael',
        'Erik',
        'Per',
        'Fredrik',
        'Hans',
        'Andreas',
        'Stefan',
        'Magnus',
        'Mats',
        'Jonas',
        'Bengt',
        'Alexander',
        'Martin',
        'Thomas',
        'Bo',
        'Karl',
        'Nils',
        'Björn',
        'Leif',
        'David',
        'Emil',
        'Ulf',
        'Sven',
        'Simon',
        'Henrik',
        'Mattias',
        'Marcus',
        'Anton',
        'Patrik',
        'Robert',
        'William',
        'Kjell',
        'Joakim',
        'Håkan',
        'Tommy',
        'Göran',
        'Christer',
        'Adam',
        'Carl',
        'Rolf',
        'Lennart',
        'Robin',
        'Niklas',
        'Oscar',
        'Sebastian',
        'Elias',
        'Tobias',
        'John',
        'Tomas',
        'Gustav',
        'Stig',
        'Michael',
        'Filip',
        'Axel',
        'Linus',
        'Christian',
        'Viktor',
        'Hugo',
        'Roger',
        'Oskar',
        'Jonathan',
        'Jesper',
        'Oliver',
        'Albin',
        'Kent',
        'Rasmus',
        'Ali',
        'Max',
        'Jörgen',
        'Joel',
        'Gunnar',
        'Victor',
        'Olle',
        'Liam',
        'Lucas',
        'Leo',
        'Jimmy',
        'Åke',
        'Pontus',
        'Markus',
        'Mohammad',
        'Kenneth',
        'Samuel',
        'Kevin',
        'Dennis',
        'Christoffer',
        'Gabriel',
        'Arvid',
        'Felix',
        'Isak',
        'Philip',
        'Lukas',
        'Dan',
        'Hampus',
        'Rickard',
        'Torbjörn',
        'Ludvig',
        'Olof',
        'Jacob',
        'Jens',
        'Benjamin',
        'Kurt',
        'Arne',
        'Jakob',
        'Bertil',
        'Johannes',
        'Mohamed',
        'Roland',
        'Adrian',
        'Noah',
        'Mathias',
        'Niclas',
        'Alfred',
        'Vincent',
        'Tony',
        'Ahmad',
        'Ola',
        'Charlie',
        'Eric',
        'Claes',
        'Edvin',
        'Richard',
        'Sten',
        'Ahmed',
        'Mohammed',
        'Alf',
        'Tim',
        'Theo',
        'Kim',
        'Conny',
        'Elliot',
        'Bernt',
        'Ove',
        'Pär',
        'Ingemar',
        'Mohamad',
        'Nicklas',
        'Kristoffer',
        'Leon',
        'Melvin',
        'Harry',
        'Staffan',
        'Johnny',
        'Krister',
        'Gustaf',
        'Melker',
        'Viggo',
        'Rune',
        'Börje',
        'Ronny',
        'André',
        'Malte',
        'Jack',
        'Alex',
        'Benny',
        'Sören',
        'Omar',
        'Sixten',
        'Ibrahim',
        'Paul',
        'Tom',
        'Frank',
        'Noel',
        'Jonny',
        'Kristian',
        'Klas',
        'Sam',
        'Theodor',
        'Casper',
        'Henry',
        'August',
        'Morgan',
        'Alvin',
        'Christopher',
        'Hannes',
        'Josef',
        'Jonatan',
        'Petter',
        'Urban',
      ],
      'female' => [
        'Anna',
        'Maria',
        'Eva',
        'Karin',
        'Lena',
        'Emma',
        'Kerstin',
        'Sara',
        'Malin',
        'Ingrid',
        'Linda',
        'Elin',
        'Birgitta',
        'Marie',
        'Inger',
        'Johanna',
        'Hanna',
        'Sofia',
        'Annika',
        'Ulla',
        'Julia',
        'Susanne',
        'Jenny',
        'Carina',
        'Ida',
        'Christina',
        'Helena',
        'Åsa',
        'Kristina',
        'Camilla',
        'Gunilla',
        'Sandra',
        'Anita',
        'Monica',
        'Amanda',
        'Cecilia',
        'Emelie',
        'Margareta',
        'Jessica',
        'Frida',
        'Elsa',
        'Alice',
        'Barbro',
        'Marianne',
        'Lisa',
        'Elisabeth',
        'Siv',
        'Maja',
        'Ulrika',
        'Anette',
        'Ebba',
        'Caroline',
        'Katarina',
        'Agneta',
        'Lina',
        'Matilda',
        'Pia',
        'Berit',
        'Gun',
        'Ella',
        'Ellen',
        'Astrid',
        'Yvonne',
        'Moa',
        'Louise',
        'Agnes',
        'Mona',
        'Linnéa',
        'Olivia',
        'Britt',
        'Emilia',
        'Therese',
        'Alva',
        'Ann',
        'Anneli',
        'Felicia',
        'Linnea',
        'Alexandra',
        'Pernilla',
        'Sofie',
        'Wilma',
        'Gunnel',
        'Monika',
        'Lovisa',
        'Nina',
        'Ingela',
        'Stina',
        'Madeleine',
        'Charlotte',
        'Linn',
        'Saga',
        'Alma',
        'Sonja',
        'Petra',
        'Birgit',
        'Rebecca',
        'Erika',
        'Alicia',
        'Josefin',
        'Josefine',
        'Britt-Marie',
        'Inga',
        'Klara',
        'Gerd',
        'Elisabet',
        'Isabelle',
        'Jeanette',
        'Jennifer',
        'Vera',
        'Lisbeth',
        'Evelina',
        'Nathalie',
        'Anne',
        'Veronica',
        'Signe',
        'Isabella',
        'Helen',
        'Sanna',
        'Marita',
        'Clara',
        'Irene',
        'Jennie',
        'Annelie',
        'Selma',
        'Kajsa',
        'Molly',
        'Stella',
        'Victoria',
        'Solveig',
        'Rebecka',
        'Angelica',
        'Fanny',
        'Laila',
        'Elvira',
        'Ylva',
        'Filippa',
        'Martina',
        'Nora',
        'Märta',
        'Maj',
        'Nellie',
        'Rut',
        'Helene',
        'Freja',
        'Ann-Charlotte',
        'Mikaela',
        'Maud',
        'Tina',
        'Nova',
        'Annette',
        'Sarah',
        'Marina',
        'Anna-Karin',
        'Tilda',
        'Tove',
        'Anna-Lena',
        'Susanna',
        'Tuva',
        'Gudrun',
        'Gunvor',
        'Iris',
        'Sigrid',
        'My',
        'Lilly',
        'Cornelia',
        'Tilde',
        'Karolina',
        'Annica',
        'Gabriella',
        'Elina',
        'Mia',
        'Charlotta',
        'Ingegerd',
        'Ellinor',
        'Tyra',
        'Carolina',
        'Thea',
        'Marie-Louise',
        'Maj-Britt',
        'Annie',
        'Siri',
        'Ann-Christin',
        'Lilian',
        'Magdalena',
        'Ester',
        'Diana',
        'Ulla-Britt',
        'Ann-Marie',
        'Viktoria',
        'Britta',
        'Ronja',
        'Ewa',
        'Rose-Marie',
        'Inga-Lill',
        'Fatima',
        'Natalie',
        'Carin',
        'Mathilda',
        'Liv',
      ],
    ];
    return $source[$gender][mt_rand(0, count($source[$gender]) - 1)];
  }
}
