alias sser_copy_config_split="if [ -f \".settings/local/config_split.config_split.local.yml\" ]; then \
  cp .settings/local/config_split.config_split.local.yml config/sync/config_split.config_split.local.yml; \
fi"

alias sser_copy_system_site="if [ -f \".settings/local/system.site.yml\" ]; then \
  cp .settings/local/system.site.yml config/sync/system.site.yml; \
fi"

alias sser_copy_system_theme="if [ -f \".settings/local/system.theme.global.yml\" ]; then \
  cp .settings/local/system.theme.global.yml config/sync/system.theme.global.yml; \
fi"

sser_copy_settings_files() {
  if [ -f "web/sites/default/settings.local.php" ]; then
    rm -f "web/sites/default/settings.local.php"
  fi

  if [ -f "web/sites/default/settings.common-local.php" ]; then
    rm -f "web/sites/default/settings.common-local.php"
  fi

  if [ -f ".settings/local/settings.local.php" ]; then
    cp ".settings/local/settings.local.php" "web/sites/default/settings.local.php" || echo "Failed to copy settings.local.php"
  fi

  if [ -f ".settings/prod/settings.common-local.php" ]; then
    cp ".settings/prod/settings.common-local.php" "web/sites/default/settings.common-local.php" || echo "Failed to copy settings.common-local.php"
  fi
}

alias sser_deploy_dev="git pull &&
 chmod +w web/sites/default/ &&
 sser_copy_settings_files &&
 sser_copy_config_split &&
 sser_copy_system_site &&
 sser_copy_system_theme &&
 lando composer install &&
 lando drush cr &&
 lando drush deploy &&
 lando drush deploy &&
 lando drush locale-check &&
 lando drush locale-update &&
 lando drush cr &&
 lando drush php-eval 'if (function_exists(\"simple_school_reports_module_info_deploy\")) { simple_school_reports_module_info_deploy(); }'"

sser_update_local() {
  # Pull the latest changes
  git pull || { echo "Failed to pull changes."; return 1; }

  # Fetch the latest main branch from sser-base
  git fetch sser-base main || { echo "Failed to fetch sser-base/main."; return 1; }

  # Attempt to merge sser-base/main into the current branch
  git merge sser-base/main --allow-unrelated-histories --no-commit --no-ff

  # Check if there is nothing to merge
  if [[ $(git diff --cached --name-only | wc -l) -eq 0 ]]; then
    echo "Nothing to merge. Already up to date.";
    return 0;
  fi

  # Check for merge conflicts
  if [[ $(git ls-files -u | wc -l) -gt 0 ]]; then
    echo "Merge conflicts detected. FIX IT!";
    return 1;
  fi

  # Ignore changes to .gitignore
  git checkout .gitignore || { echo "Failed to reset .gitignore."; return 1; }

  # Stage changes and commit
  git add . &&
  git commit -m "Auto merged sser-base" || { echo "Commit failed."; return 1; }

  # Push changes
  git push || { echo "Push failed."; return 1; }

  echo "Updated successfully."
}

if [ -f ~/Projects/sser/private/.sser_private_bash_local ]; then
    . ~/Projects/sser/private/.sser_private_bash_local
fi
